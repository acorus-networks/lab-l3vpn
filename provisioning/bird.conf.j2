###################
##
## Some information
##
###################
define MY_ASN = {{ bgp.asn }};
define TRANSIT_ASN = 35280;

router id {{ bgp.id }};

# Configure logging
log syslog { debug, trace, info, remote, warning, error, auth, fatal, bug };

protocol direct my_network {
    interface "eth2";
    import all;
    export none;
}

protocol kernel {
  persist;         # Don't remove routes on bird shutdown
  scan time 20;    # Scan kernel routing table every 20 seconds
  import none;     # We use "protocol direct" to export routes
  learn;           # Allow other daemons to learn about routes from the kernel routing table
  merge paths 8;
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
  scan time 20;    # Scan interfaces every 5 seconds
}

{% for session in bgp.sessions %}

##############
protocol bgp session{{ loop.index }} {
  local as MY_ASN;
  neighbor {{ session.peer_ip }} as {{ session.peer_asn }};
}
{% endfor %}